G_DEFINE_TYPE (${upperCamel}, ${lowerSnake}, I_CAL_TYPE_OBJECT)

static void
${lowerSnake}_class_init (${upperCamel}Class *klass)
{	
	g_type_class_add_private (klass, sizeof (${upperCamel}));
}

static void
${lowerSnake}_init (${upperCamel} *self)
{
}

/**
 * ${lowerSnake}_new_full: (skip)
 **/
${new_full}
{
	${upperCamel} *object;$^${isBare}
	${native} *clone;^$
	object = g_object_new (${upperSnake}_TYPE, NULL);$^${isBare}
	clone = g_new (${native}, 1);
	*clone = native;^$
	i_cal_object_construct ((ICalObject *)object,
		        	$^!${isBare}(gpointer) native^$$^${isBare}(gpointer) clone^$,
		        	(GDestroyNotify) ${destroyFunc},
		        	$^${isPossibleGlobal}is_global_memory^$$^!${isPossibleGlobal}FALSE^$,
		        	$^!${isBare}owner^$$^${isBare}NULL^$);
    							
	return object;
}

/**
 * ${lowerSnake}_get_native_set_owner: (skip)
 **/
 /*
${get_native_set_owner}
{
	${native} *native_pointer;$^!${isBare}	
	if (owner != NULL)
		i_cal_object_set_owner ((ICalObject *)object, owner);^$
	native_pointer = i_cal_object_get_native ((ICalObject *)object);
	$^!${isBare}return native_pointer;^$$^${isBare}
	if (native_pointer) {
		return *native_pointer;
	} else {
		return ${defaultNative};
	}^$
}*/$^${isBare}


/**
 * ${lowerSnake}_get_native_pointer_set_owner: (skip)
 **/
 /*
${get_native_pointer_set_owner}
{$^!${isBare}
	if (owner != NULL)
		i_cal_object_set_owner ((ICalObject *)object, owner);^$
	return i_cal_object_get_native ((ICalObject *)object);
}*/^$


/**
 * ${lowerSnake}_get_native_remove_owner: (skip)
 **/
${native} $^!${isBare}*^$
${lowerSnake}_get_native_remove_owner (${upperCamel} *object)
{
	${native} *native_pointer;	
	i_cal_object_remove_owner ((ICalObject *)object);
	native_pointer = i_cal_object_get_native ((ICalObject *)object);
	$^!${isBare}return native_pointer;^$$^${isBare}
	if (native_pointer) {
		return *native_pointer;
	} else {
		return ${defaultNative};
	}^$
}

/**
 * ${lowerSnake}_steal_native: (skip)
 **/
${native} $^!${isBare}*^$
${lowerSnake}_steal_native (${upperCamel} *object)
{
	${native} *native_pointer;$^${isBare}
	${native} native;^$
	native_pointer = (${native} *)i_cal_object_steal_native ((ICalObject *)object);
    
	$^!${isBare}return native_pointer;^$$^${isBare}if (native_pointer != NULL) {
		native = *native_pointer;
		${destroyFunc} (native_pointer);
		return native;
	} else {
		return ${defaultNative};
	}^$
}
