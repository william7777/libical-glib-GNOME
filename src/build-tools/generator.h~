/* 
 * File:   generator.h
 * Author: williamyu
 *
 * Created on June 29, 2014, 4:30 PM
 */

#ifndef GENERATOR_H
#define	GENERATOR_H

#include <ctype.h>
#include <stdio.h>
#include <string.h>
#include <libxml/xmlreader.h>
#include <glib-2.0/glib.h>
#include "xml-parser.h"


#define HEADER_TEMPLATE "header-template"
#define INLINE_TRANSLATION "${translator} (${name})"
#define SOURCE_TEMPLATE "source-template"
#define COMMON_HEADER "i-cal-object.h"
#define HEADER_STRUCTURE_BOILERPLATE_TEMPLATE "header-structure-boilerplate-template"
#define SOURCE_STRUCTURE_BOILERPLATE_TEMPLATE "source-structure-boilerplate-template"
GHashTable *defaultValueTable;
GHashTable *allObjects;

gchar *get_upper_camel_from_lower_snake (const gchar *lowerSnake);
gchar *get_lower_snake_from_upper_camel (const gchar *upperCamel);
gchar *get_upper_snake_from_lower_snake (const gchar *lowerSnake);
gchar *get_lower_train_from_lower_snake (const gchar *lowerSnake);
gchar *get_upper_snake_from_upper_camel (const gchar *upperCamel);
gchar *get_lower_train_from_upper_camel (const gchar *upperCamel);

gchar *get_source_method_code (Method *method);
gchar *get_inline_parameter (Parameter *para);
gchar *get_source_method_comment (Method *method);
gchar *get_source_method_proto (Method *method);
gchar *get_source_method_body (Method *method, const gchar *namespace);
gchar *get_source_destruction (Structure *structure);
gchar *get_source_method_checkers (Method *method);
gchar *get_source_method_checker (Parameter *para, Ret *ret);
gchar *get_true_type (const gchar *type);
gchar *get_source_run_time_checkers (Method *method, const gchar *namespace);
gchar *get_translator_name_for_return (gchar *upperCamel);
GHashTable *get_hash_table_from_structure (Structure *structure);
void generate_header_method_protos (FILE *out, Structure *structure);
void generate_header_method_proto (FILE *out, Method *method);
void generate_header_enums (FILE *out, Structure *structure);
void generate_header_enum (FILE *out, Enumeration *enumeration);
void generate_header_includes (FILE *out, Structure *structure);
void generate_header_structure_boilerplate (FILE *out, Structure *structure, GHashTable* table);
void generate_header (FILE *out, Structure *structure, GHashTable* table);
void generate_source (FILE *out, Structure *structure, GHashTable* table);
void generate_source_structure_boilerplate (FILE *out, Structure *structure, GHashTable* table);
void generate_conditional (FILE *out, Structure *structure, gchar *statement);
void generate_header_and_source (Structure *structure);

#endif	/* GENERATOR_H */
