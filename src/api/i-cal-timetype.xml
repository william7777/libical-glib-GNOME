<structure namespace="ICal" name="Timetype" native="icaltimetype" is_bare="true" default_native="i_cal_timetype_new()">
	<method name="i_cal_timetype_new" corresponds="CUSTOM" kind="constructor" since="1.0">
		<returns type="icaltimetype" comment="The newly created #ICalTimetype. It is the epoch time (19700-1-1 00:00:00 utc)" />
        <comment xml:space="preserve">Create a new #ICalTimetype.</comment>
        <custom>	icaltimetype timetype;
	timetype.year = 1970;
	timetype.month = 1;
	timetype.day = 1;
	timetype.hour = 0;
	timetype.minute = 0;
	timetype.second = 0;
	timetype.is_utc = 1;
	timetype.is_date = 0;
	timetype.is_daylight = 0;
	timetype.zone = NULL;</custom>
    </method>
	<method name="i_cal_timetype_get_year" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The year." />
        <comment xml:space="preserve">Get the year of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->year;</custom>
    </method>
    <method name="i_cal_timetype_get_month" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The month." />
        <comment xml:space="preserve">Get the month of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->month;</custom>
    </method>
    <method name="i_cal_timetype_get_day" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The day." />
        <comment xml:space="preserve">Get the day of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->day;</custom>
    </method>
    <method name="i_cal_timetype_get_hour" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The hour." />
        <comment xml:space="preserve">Get the hour of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->hour;</custom>
    </method>
    <method name="i_cal_timetype_get_minute" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The minute." />
        <comment xml:space="preserve">Get the minute of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->minute;</custom>
    </method>
    <method name="i_cal_timetype_get_second" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The second." />
        <comment xml:space="preserve">Get the second of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->second;</custom>
    </method>
    <method name="i_cal_timetype_is_utc" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_utc." />
        <comment xml:space="preserve">Get the is_utc of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->is_utc;</custom>
    </method>
    <method name="i_cal_timetype_is_date" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_date." />
        <comment xml:space="preserve">Get the is_date of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->is_date;</custom>
    </method>
    <method name="i_cal_timetype_is_daylight" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_daylight." />
        <comment xml:space="preserve">Get the is_daylight of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timetype_get_native_pointer_set_owner (timetype)->is_daylight;</custom>
    </method>
    <method name="i_cal_timetype_get_zone" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="const ICalTimezone *" translator="i_cal_timezone_new_full" translator_argus="NULL, TRUE" comment="The timezone." />
        <comment xml:space="preserve">Get the is_daylight of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timezone_new_full (i_cal_timetype_get_native_pointer_set_owner (timetype)->zone, NULL, TRUE);</custom>
    </method>
</structure>
