<structure namespace="ICal" name="Timetype" native="icaltimetype" is_bare="true">
	<method name="i_cal_timetype_get_year" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The year." />
        <comment xml:space="preserve">Get the year of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->year;</custom>
    </method>
    <method name="i_cal_timetype_get_month" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The month." />
        <comment xml:space="preserve">Get the month of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->month;</custom>
    </method>
    <method name="i_cal_timetype_get_day" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The day." />
        <comment xml:space="preserve">Get the day of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->day;</custom>
    </method>
    <method name="i_cal_timetype_get_hour" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The hour." />
        <comment xml:space="preserve">Get the hour of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->hour;</custom>
    </method>
    <method name="i_cal_timetype_get_minute" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The minute." />
        <comment xml:space="preserve">Get the minute of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->minute;</custom>
    </method>
    <method name="i_cal_timetype_get_second" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The second." />
        <comment xml:space="preserve">Get the second of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->second;</custom>
    </method>
    <method name="i_cal_timetype_is_utc" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_utc." />
        <comment xml:space="preserve">Get the is_utc of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->is_utc;</custom>
    </method>
    <method name="i_cal_timetype_is_date" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_date." />
        <comment xml:space="preserve">Get the is_date of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->is_date;</custom>
    </method>
    <method name="i_cal_timetype_is_daylight" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="gint" comment="The is_daylight." />
        <comment xml:space="preserve">Get the is_daylight of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return timetype->priv->native->is_daylight;</custom>
    </method>
    <method name="i_cal_timetype_get_zone" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalTimetype *" name="timetype" comment="The #ICalTimetype to be queried."/>
        <returns type="const ICalTimezone *" translator="i_cal_timezone_new_full" translator_argus="NULL, TRUE" comment="The timezone." />
        <comment xml:space="preserve">Get the is_daylight of #ICalTimetype.</comment>
        <custom>	g_return_val_if_fail (timetype == NULL, 0);
	return i_cal_timezone_new_full (timetype->priv->native->zone, NULL, TRUE);</custom>
    </method>
</structure>
