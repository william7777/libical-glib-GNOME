<structure namespace="ICal" name="RecurrenceType" native="struct icalrecurrencetype" is_bare="true" default_native="i_cal_recurrence_type_new ()">
     <enum name="ICalRecurrenceTypeFrequency" default_native="I_CAL_NO_RECURRENCE">
        <element name="ICAL_SECONDLY_RECURRENCE"/>
        <element name="ICAL_MINUTELY_RECURRENCE"/>	
        <element name="ICAL_HOURLY_RECURRENCE"/>
        <element name="ICAL_DAILY_RECURRENCE"/>
        <element name="ICAL_WEEKLY_RECURRENCE"/>
        <element name="ICAL_MONTHLY_RECURRENCE"/>
        <element name="ICAL_YEARLY_RECURRENCE"/>
        <element name="ICAL_NO_RECURRENCE"/>
    </enum>
    <enum name="ICalRecurrenceTypeWeekday" default_native="I_CAL_NO_WEEKDAY">
        <element name="ICAL_NO_WEEKDAY"/>
        <element name="ICAL_SUNDAY_WEEKDAY"/>	
        <element name="ICAL_MONDAY_WEEKDAY"/>
        <element name="ICAL_TUESDAY_WEEKDAY"/>
        <element name="ICAL_WEDNESDAY_WEEKDAY"/>
        <element name="ICAL_THURSDAY_WEEKDAY"/>
        <element name="ICAL_FRIDAY_WEEKDAY"/>
        <element name="ICAL_SATURDAY_WEEKDAY"/>
    </enum>
    <method name="i_cal_recurrence_type_new" corresponds="CUSTOM" annotation="skip" since="1.0">
    	<returns type="struct icalrecurrencetype" comment="The default value."/>
    	<custom>	struct icalrecurrencetype ret;
	icalrecurrencetype_clear (&amp;ret);
	return ret;</custom>
    </method>
    <method name="i_cal_recurrence_type_clear" corresponds="icalrecurrencetype_clear" since="1.0">
        <parameter type="ICalRecurrenceType *" name="r" translator="i_cal_recurrence_type_get_native_pointer_set_owner" comment="The #ICalRecurrenceType to be reset."/>
        <comment xml:space="preserve">Reset an #ICalRecurrenceType.</comment>
    </method>
    <method name="i_cal_recurrence_type_day_day_of_week" corresponds="icalrecurrencetype_day_day_of_week" since="1.0">
        <parameter type="gshort" name="day" comment="The encoded day which represents the day of the week and Nth day of the week."/>
        <returns type="ICalRecurrenceTypeWeekday" comment="The decoded weekday with Monday to be 1."/>
        <comment xml:space="preserve">Decode a day to a weekday in a week.</comment>
    </method>
    <method name="i_cal_recurrence_type_day_position" corresponds="icalrecurrencetype_day_position" since="1.0">
        <parameter type="gshort" name="day" comment="The encoded day which represents the day of the week and Nth day of the week."/>
        <returns type="gint" comment="The decoded day of the week. 0 == any of day of week. 1 == first, 2 = second, -2 == second to last, etc"/>
        <comment xml:space="preserve">Decode a day to a position of the weekday.</comment>
    </method>
    <method name="i_cal_recurrence_type_from_string" corresponds="icalrecurrencetype_from_string" since="1.0">
        <parameter type="const gchar *" name="str" comment="The string representation of the #ICalRecurrenceType"/>
        <returns type="ICalRecurrenceType *" annotation="transfer full" comment="The #ICalRecurrenceType converted from @str."/>
        <comment xml:space="preserve">Convert a string to a #ICalRecurrenceType.</comment>
    </method>
    <method name="i_cal_recurrence_type_as_string_r" corresponds="icalrecurrencetype_as_string_r" since="1.0">
        <parameter type="ICalRecurrenceType *" name="recur" translator="i_cal_recurrence_type_get_native_pointer_set_owner" comment="The #ICalRecurrenceType to be converted."/>
        <returns type="gchar *" annotation="transfer full" comment="The string representation of @recur."/>
        <comment xml:space="preserve">Convert a #ICalRecurrenceType to a string.</comment>
    </method>
</structure>