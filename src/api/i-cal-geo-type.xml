<!--
  Copyright (C) 2015 William Yu <williamyu@gnome.org>
  
  This library is free software: you can redistribute it and/or modify it
  under the terms of version 2.1. of the GNU Lesser General Public License
  as published by the Free Software Foundation.
  
  This library is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
  for more details.
  
  You should have received a copy of the GNU Lesser General Public License
  along with this library. If not, see <http://www.gnu.org/licenses/>.
-->
<structure namespace="ICal" name="GeoType" native="struct icalgeotype" is_bare="true" default_native="i_cal_geo_type_new_default ()">
	<method name="i_cal_geo_type_new_default" corresponds="CUSTOM" annotation="skip" kind="constructor" since="1.0">
        <returns type="struct icalgeotype" annotation="transfer full" comment="The newly created #ICalGeoType" />
        <comment xml:space="preserve">Create a new default #ICalGeoType.</comment>
        <custom>	struct icalgeotype geotype;
	geotype.lat = 0;
	geotype.lon = 0;
	return geotype;</custom>
    </method>
    <method name="i_cal_geo_type_get_lat" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalGeoType *" name="geo_type" comment="The #ICalGeoType to be queried."/>
        <returns type="gdouble" comment="The lat." />
        <comment xml:space="preserve">Get the lat of #ICalGeoType.</comment>
        <custom>	g_return_val_if_fail (geo_type != NULL, 0);
	return ((struct icalgeotype *)i_cal_object_get_native ((ICalObject *)geo_type))->lat;</custom>
    </method>
    <method name="i_cal_geo_type_set_lat" corresponds="CUSTOM" kind="set" since="1.0">
    	<parameter type="ICalGeoType *" name="geo_type" comment="The #ICalGeoType to be set."/>
        <parameter type="gdouble" name="lat" comment="The lat."/>
        <comment>Set the lat of #ICalGeoType.</comment>
        <custom>	g_return_if_fail (geo_type != NULL &amp;&amp; I_CAL_IS_GEO_TYPE (geo_type));
	((struct icalgeotype *)i_cal_object_get_native ((ICalObject *)geo_type))->lat = lat;</custom>
    </method>
    <method name="i_cal_geo_type_get_lon" corresponds="CUSTOM" kind="get" since="1.0">
		<parameter type="ICalGeoType *" name="geo_type" comment="The #ICalGeoType to be queried."/>
        <returns type="gdouble" comment="The lon." />
        <comment xml:space="preserve">Get the lon of #ICalGeoType.</comment>
        <custom>	g_return_val_if_fail (geo_type != NULL, 0);
	return ((struct icalgeotype *)i_cal_object_get_native ((ICalObject *)geo_type))->lon;</custom>
    </method>
    <method name="i_cal_geo_type_set_lon" corresponds="CUSTOM" kind="set" since="1.0">
    	<parameter type="ICalGeoType *" name="geo_type" comment="The #ICalGeoType to be set."/>
        <parameter type="gdouble" name="lon" comment="The lon."/>
        <comment>Set the lon of #ICalGeoType.</comment>
        <custom>	g_return_if_fail (geo_type != NULL &amp;&amp; I_CAL_IS_GEO_TYPE (geo_type));
	((struct icalgeotype *)i_cal_object_get_native ((ICalObject *)geo_type))->lon = lon;</custom>
    </method>
</structure>