<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="libical-glib-1.0"/>
  <c:include name="libical-glib/libical-glib.h"/>
  <namespace name="ICalGLib"
             version="1.0"
             shared-library="libical-glib-1.0.so"
             c:identifier-prefixes="ICal"
             c:symbol-prefixes="i_cal">
    <class name="Array"
           c:symbol-prefix="array"
           c:type="ICalArray"
           parent="Object"
           glib:type-name="ICalArray"
           glib:get-type="i_cal_array_get_type"
           glib:type-struct="ArrayClass">
      <constructor name="new" c:identifier="i_cal_array_new" version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly create #ICalArray with the properties set by @element_size and @increment_size  Create a #ICalArray with the element size to be @element_size and increment size to be @increment_size</doc>
          <type name="Array" c:type="ICalArray*"/>
        </return-value>
        <parameters>
          <parameter name="element_size" transfer-ownership="none">
            <doc xml:space="preserve">The size of the element of the array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="increment_size" transfer-ownership="none">
            <doc xml:space="preserve">The incremental size when the array is full</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="i_cal_array_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Array" c:type="ICalArray*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icalarray*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append" c:identifier="i_cal_array_append" version="1.0">
        <doc xml:space="preserve">Append @element to the end of the array</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="array"
                              direction="inout"
                              caller-allocates="0"
                              transfer-ownership="full">
            <doc xml:space="preserve">The #ICalArray to be appended.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
          <parameter name="element" transfer-ownership="none">
            <doc xml:space="preserve">The element to be appended to the #ICalArray</doc>
            <type name="gpointer" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="i_cal_array_copy" version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly cloned #ICalArray with the same value as the @array  Create a deep copy of #ICalArray with the same properties as the @array</doc>
          <type name="Array" c:type="ICalArray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalArray to be cloned.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="element_at"
              c:identifier="i_cal_array_element_at"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The element located at the @position in the @array  Get the element located in the @position in the @array. NULL if position if out of bound</doc>
          <type name="gpointer" c:type="void*"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalArray to be queried.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve">The position the target element is located</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="i_cal_array_free"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve">Free the #ICalArray</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="array" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalArray to be freed.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_array_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalarray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_array_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalarray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Array" c:type="const ICalArray*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_element_at"
              c:identifier="i_cal_array_remove_element_at"
              version="1.0">
        <doc xml:space="preserve">Remove the element at the @position from the array</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="array"
                              direction="inout"
                              caller-allocates="0"
                              transfer-ownership="full">
            <doc xml:space="preserve">The #ICalArray to be modified.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve">The position in which the element will be removed from the array</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort" c:identifier="i_cal_array_sort" version="1.0">
        <doc xml:space="preserve">Sort the @array using the sort function @compare</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="array"
                              direction="inout"
                              caller-allocates="0"
                              transfer-ownership="full">
            <doc xml:space="preserve">The #ICalArray to be sorted.</doc>
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
          <parameter name="compare" transfer-ownership="none" scope="call">
            <doc xml:space="preserve">The compare function which is used to sort the array</doc>
            <type name="GLib.CompareFunc" c:type="GCompareFunc"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_array_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icalarray*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Array" c:type="ICalArray*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="ArrayClass"
            c:type="ICalArrayClass"
            glib:is-gtype-struct-for="Array">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <class name="Attach"
           c:symbol-prefix="attach"
           c:type="ICalAttach"
           parent="Object"
           glib:type-name="ICalAttach"
           glib:get-type="i_cal_attach_get_type"
           glib:type-struct="AttachClass">
      <constructor name="new_from_data"
                   c:identifier="i_cal_attach_new_from_data"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalAttach  Create a new #ICalAttach from the data.</doc>
          <type name="Attach" c:type="ICalAttach*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve">The data used to create the #ICalAttach</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="free_fn"
                     transfer-ownership="none"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve">The function used to free the data when the create #ICalAttach is detroyed.</doc>
            <type name="GLib.Func" c:type="GFunc"/>
          </parameter>
          <parameter name="free_fn_data"
                     transfer-ownership="none"
                     allow-none="1">
            <doc xml:space="preserve">The userdata used for the free function @free_fn</doc>
            <type name="gpointer" c:type="void*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_url"
                   c:identifier="i_cal_attach_new_from_url"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalAttach from the @url  Create a new #ICalAttach from the url</doc>
          <type name="Attach" c:type="ICalAttach*"/>
        </return-value>
        <parameters>
          <parameter name="url" transfer-ownership="none">
            <doc xml:space="preserve">The url from which the object is created</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="i_cal_attach_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Attach" c:type="ICalAttach*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icalattach*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_data"
              c:identifier="i_cal_attach_get_data"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The data component of the @attach. NULL if it is built from url or there is an error.  Get the data if the #ICalAttach is built from the data. NULL if else.</doc>
          <type name="utf8" c:type="guchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attach" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalAttach to be queried</doc>
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_is_url"
              c:identifier="i_cal_attach_get_is_url"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if the @attach is built from url and 0 if not.  Check whether the #ICalAttach is built from url</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="attach" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalAttach to be queried</doc>
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_attach_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalattach*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_attach_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalattach*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Attach" c:type="const ICalAttach*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="i_cal_attach_get_url" version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The url component of the @attach. NULL if it is built from data or there is an error.  Get the url if the #ICalAttach is built from the url. NULL if else.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="attach" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalAttach to be queried</doc>
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref"
              c:identifier="i_cal_attach_ref"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve">Increase the ref counter by 1 for the @attach</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attach" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalAttach to be referenced by once</doc>
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_attach_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icalattach*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="i_cal_attach_unref"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve">Decrese the ref counter by 1 for the @attach</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="attach" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalAttach to be unreferenced by once</doc>
            <type name="Attach" c:type="ICalAttach*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="AttachClass"
            c:type="ICalAttachClass"
            glib:is-gtype-struct-for="Attach">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <class name="Component"
           c:symbol-prefix="component"
           c:type="ICalComponent"
           parent="Object"
           glib:type-name="ICalComponent"
           glib:get-type="i_cal_component_get_type"
           glib:type-struct="ComponentClass">
      <constructor name="new" c:identifier="i_cal_component_new" version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a new #ICalComponent with specific type.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponentKind.</doc>
            <type name="ComponentKind" c:type="ICalComponentKind"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_string"
                   c:identifier="i_cal_component_new_from_string"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent based on @str.  Create a new #ICalComponent based on a string.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">The string used to create #ICalComponent.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="i_cal_component_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icalcomponent*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_vagenda"
                   c:identifier="i_cal_component_new_vagenda"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vagenda</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_valarm"
                   c:identifier="i_cal_component_new_valarm"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be valarm</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vcalendar"
                   c:identifier="i_cal_component_new_vcalendar"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vcalendar</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vevent"
                   c:identifier="i_cal_component_new_vevent"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vevent</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vfreebusy"
                   c:identifier="i_cal_component_new_vfreebusy"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vfreebusy</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vjournal"
                   c:identifier="i_cal_component_new_vjournal"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vjournal</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vquery"
                   c:identifier="i_cal_component_new_vquery"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vquery</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vtimezone"
                   c:identifier="i_cal_component_new_vtimezone"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vtimezone</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_vtodo"
                   c:identifier="i_cal_component_new_vtodo"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be vtodo</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_x"
                   c:identifier="i_cal_component_new_x"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a new #ICalComponent based on name of x property.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <parameter name="x_name" transfer-ownership="none">
            <doc xml:space="preserve">The name of x property.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_xdaylight"
                   c:identifier="i_cal_component_new_xdaylight"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be xdaylight</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <constructor name="new_xstandard"
                   c:identifier="i_cal_component_new_xstandard"
                   version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalComponent.  Create a #ICalComponent with the type to be xstandard</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
      </constructor>
      <function name="kind_is_valid"
                c:identifier="i_cal_component_kind_is_valid"
                version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if @kind id a #ICalComponent but not the I_CAL_NO_COMPONENT, 0 if not.  Check if a #ICalComponentKind is valid.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponentKind.</doc>
            <type name="ComponentKind" c:type="const ICalComponentKind"/>
          </parameter>
        </parameters>
      </function>
      <function name="kind_to_string"
                c:identifier="i_cal_component_kind_to_string"
                version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The string representation of @kind.  Convert a #ICalComponentKind to a string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponentKind.</doc>
            <type name="ComponentKind" c:type="ICalComponentKind"/>
          </parameter>
        </parameters>
      </function>
      <function name="string_to_kind"
                c:identifier="i_cal_component_string_to_kind"
                version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A #ICalComponentKind  Convert a string to a #ICalComponentKind.</doc>
          <type name="ComponentKind" c:type="ICalComponentKind"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve">A string.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="add_component"
              c:identifier="i_cal_component_add_component"
              version="1.0">
        <doc xml:space="preserve">Add a #ICalComponent into another #ICalComponent as a child component.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve">A child #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_property"
              c:identifier="i_cal_component_add_property"
              version="1.0">
        <doc xml:space="preserve">Add a #ICalProperty into #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalProperty.</doc>
            <type name="Property" c:type="ICalProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="as_ical_string_r"
              c:identifier="i_cal_component_as_ical_string_r"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The string representation of #ICalComponent.  Convert a #ICalComponent to a string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be converted.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="check_restrictions"
              c:identifier="i_cal_component_check_restrictions"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if valid, 0 if not.  Check whether #ICalComponent is valid in terms of restrictions.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="convert_errors"
              c:identifier="i_cal_component_convert_errors"
              version="1.0">
        <doc xml:space="preserve">Convert some X-LIC-ERROR properties into RETURN-STATUS properties.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="count_components"
              c:identifier="i_cal_component_count_components"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The count of child #ICalComponent in the parent one.  Count the child #ICalComponent with the target kind in the parent one.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be checked.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">The target #ICalComponentKind</doc>
            <type name="ComponentKind" c:type="ICalComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="count_errors"
              c:identifier="i_cal_component_count_errors"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The count of errors.  Count the number of errors in #ICalComponent.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="count_properties"
              c:identifier="i_cal_component_count_properties"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The number of #ICalProperties.  Count the #ICalProperty in #ICalComponent.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalPropertyKind.</doc>
            <type name="PropertyKind" c:type="ICalPropertyKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="i_cal_component_free" version="1.0">
        <doc xml:space="preserve">Free a #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be freed.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_comment"
              c:identifier="i_cal_component_get_comment"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The comment of @comp.  Get the comment of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_current_component"
              c:identifier="i_cal_component_get_current_component"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The current #ICalComponent.  Get the current #ICalComponent in #ICalComponent.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_current_property"
              c:identifier="i_cal_component_get_current_property"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The current #ICalProperty.  Get the current #ICalProperty in #ICalComponent.</doc>
          <type name="Property" c:type="ICalProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="i_cal_component_get_description"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The description of @comp.  Get the description of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dtend"
              c:identifier="i_cal_component_get_dtend"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #ICalTimetype.  Get the dtend of the #ICalComponent.</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_dtstart"
              c:identifier="i_cal_component_get_dtstart"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A #ICalTimetype.  Get the dtstart of the #ICalComponent.</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_first_component"
              c:identifier="i_cal_component_get_first_component"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The first #ICalComponent.  Get the first #ICalComponent with specific kind in #ICalComponent.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponentKind.</doc>
            <type name="ComponentKind" c:type="ICalComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_first_property"
              c:identifier="i_cal_component_get_first_property"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The first #ICalProperty.  Get the first #ICalProperty with specific kind in #ICalComponent.</doc>
          <type name="Property" c:type="ICalProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalPropertyKind.</doc>
            <type name="PropertyKind" c:type="ICalPropertyKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_first_real_component"
              c:identifier="i_cal_component_get_first_real_component"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">A reference to the first VEVENT, VTODO or VJOURNAL  For VCOMPONENT: Return a reference to the first VEVENT, VTODO or VJOURNAL.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="c" transfer-ownership="none">
            <doc xml:space="preserve">A VCOMPONENT type of #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_inner"
              c:identifier="i_cal_component_get_inner"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The first VEVENT, VTODO or VJOURNAL sub-component.  Return the first VEVENT, VTODO or VJOURNAL sub-component of cop, or comp if it is one of those types.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="i_cal_component_get_location"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The location of @comp.  Get the location of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_component_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalcomponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_component_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalcomponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Component" c:type="const ICalComponent*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_next_component"
              c:identifier="i_cal_component_get_next_component"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The next #ICalComponent.  Get the next #ICalComponent with specific kind in #ICalComponent.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponentKind.</doc>
            <type name="ComponentKind" c:type="ICalComponentKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_next_property"
              c:identifier="i_cal_component_get_next_property"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The next #ICalProperty.  Get the next #ICalProperty with specific kind in #ICalComponent.</doc>
          <type name="Property" c:type="ICalProperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="kind" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalPropertyKind.</doc>
            <type name="PropertyKind" c:type="ICalPropertyKind"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_relcalid"
              c:identifier="i_cal_component_get_relcalid"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The relcalid of @comp.  Get the relcalid of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sequence"
              c:identifier="i_cal_component_get_sequence"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The sequence of @comp.  Get the sequence of the #ICalComponent.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="i_cal_component_get_summary"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The summary of @comp.  Get the summary of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_uid"
              c:identifier="i_cal_component_get_uid"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The uid of @comp.  Get the uid of the #ICalComponent.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="i_cal_component_is_valid"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if yes, 0 if not.  Check whether #ICalComponent is valid.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be checked.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="isa" c:identifier="i_cal_component_isa" version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">A #ICalComponentKind.  Get the type of #ICalComponent.</doc>
          <type name="ComponentKind" c:type="ICalComponentKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be checked.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="isa_component"
              c:identifier="i_cal_component_isa_component"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if yes, 0 if not.  Check whether the native part of #ICalComponent is icalcomponent.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be checked.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="merge_component"
              c:identifier="i_cal_component_merge_component"
              version="1.0">
        <doc xml:space="preserve">This takes 2 VCALENDAR components and merges the second one into the first, resolving any problems with
conflicting TZIDs. comp_to_merge will no longer exist after calling this function.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="comp_to_merge" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent. After merged it will not exist any more.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_clone"
              c:identifier="i_cal_component_new_clone"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly deeply cloned #ICalComponent.  Deeply clone a #ICalComponent.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalComponent to be created.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_component"
              c:identifier="i_cal_component_remove_component"
              version="1.0">
        <doc xml:space="preserve">Remove a child #ICalComponent from another #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve">A child #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_property"
              c:identifier="i_cal_component_remove_property"
              version="1.0">
        <doc xml:space="preserve">Remove #ICalProperty from #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="component" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalProperty.</doc>
            <type name="Property" c:type="ICalProperty*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_comment"
              c:identifier="i_cal_component_set_comment"
              version="1.0">
        <doc xml:space="preserve">Set the comment of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing comment.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="i_cal_component_set_description"
              version="1.0">
        <doc xml:space="preserve">Set the description of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing description.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dtend"
              c:identifier="i_cal_component_set_dtend"
              version="1.0">
        <doc xml:space="preserve">Set the dtend of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalTimetype.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dtstart"
              c:identifier="i_cal_component_set_dtstart"
              version="1.0">
        <doc xml:space="preserve">Set the dtstart of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalTimetype.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_location"
              c:identifier="i_cal_component_set_location"
              version="1.0">
        <doc xml:space="preserve">Set the location of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing location.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_relcalid"
              c:identifier="i_cal_component_set_relcalid"
              version="1.0">
        <doc xml:space="preserve">Set the relcalid of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing relcalid.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sequence"
              c:identifier="i_cal_component_set_sequence"
              version="1.0">
        <doc xml:space="preserve">Set the sequence of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">The sequence number.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_summary"
              c:identifier="i_cal_component_set_summary"
              version="1.0">
        <doc xml:space="preserve">Set the summary of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing summary.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uid"
              c:identifier="i_cal_component_set_uid"
              version="1.0">
        <doc xml:space="preserve">Set the uid of the #ICalComponent.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
          <parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve">A string representing uid.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_component_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icalcomponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="strip_errors"
              c:identifier="i_cal_component_strip_errors"
              version="1.0">
        <doc xml:space="preserve">Remove all X-LIC-ERROR properties.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">A #ICalComponent</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="ComponentClass"
            c:type="ICalComponentClass"
            glib:is-gtype-struct-for="Component">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <enumeration name="ComponentKind" c:type="ICalComponentKind">
      <member name="no_component" value="0" c:identifier="I_CAL_NO_COMPONENT">
      </member>
      <member name="any_component"
              value="1"
              c:identifier="I_CAL_ANY_COMPONENT">
      </member>
      <member name="xroot_component"
              value="2"
              c:identifier="I_CAL_XROOT_COMPONENT">
      </member>
      <member name="xattach_component"
              value="3"
              c:identifier="I_CAL_XATTACH_COMPONENT">
      </member>
      <member name="vevent_component"
              value="4"
              c:identifier="I_CAL_VEVENT_COMPONENT">
      </member>
      <member name="vtodo_component"
              value="5"
              c:identifier="I_CAL_VTODO_COMPONENT">
      </member>
      <member name="vjournal_component"
              value="6"
              c:identifier="I_CAL_VJOURNAL_COMPONENT">
      </member>
      <member name="vcalendar_component"
              value="7"
              c:identifier="I_CAL_VCALENDAR_COMPONENT">
      </member>
      <member name="vagenda_component"
              value="8"
              c:identifier="I_CAL_VAGENDA_COMPONENT">
      </member>
      <member name="vfreebusy_component"
              value="9"
              c:identifier="I_CAL_VFREEBUSY_COMPONENT">
      </member>
      <member name="valarm_component"
              value="10"
              c:identifier="I_CAL_VALARM_COMPONENT">
      </member>
      <member name="xaudioalarm_component"
              value="11"
              c:identifier="I_CAL_XAUDIOALARM_COMPONENT">
      </member>
      <member name="xdisplayalarm_component"
              value="12"
              c:identifier="I_CAL_XDISPLAYALARM_COMPONENT">
      </member>
      <member name="xemailalarm_component"
              value="13"
              c:identifier="I_CAL_XEMAILALARM_COMPONENT">
      </member>
      <member name="xprocedurealarm_component"
              value="14"
              c:identifier="I_CAL_XPROCEDUREALARM_COMPONENT">
      </member>
      <member name="vtimezone_component"
              value="15"
              c:identifier="I_CAL_VTIMEZONE_COMPONENT">
      </member>
      <member name="xstandard_component"
              value="16"
              c:identifier="I_CAL_XSTANDARD_COMPONENT">
      </member>
      <member name="xdaylight_component"
              value="17"
              c:identifier="I_CAL_XDAYLIGHT_COMPONENT">
      </member>
      <member name="x_component" value="18" c:identifier="I_CAL_X_COMPONENT">
      </member>
      <member name="vschedule_component"
              value="19"
              c:identifier="I_CAL_VSCHEDULE_COMPONENT">
      </member>
      <member name="vquery_component"
              value="20"
              c:identifier="I_CAL_VQUERY_COMPONENT">
      </member>
      <member name="vreply_component"
              value="21"
              c:identifier="I_CAL_VREPLY_COMPONENT">
      </member>
      <member name="vcar_component"
              value="22"
              c:identifier="I_CAL_VCAR_COMPONENT">
      </member>
      <member name="vcommand_component"
              value="23"
              c:identifier="I_CAL_VCOMMAND_COMPONENT">
      </member>
      <member name="xlicinvalid_component"
              value="24"
              c:identifier="I_CAL_XLICINVALID_COMPONENT">
      </member>
      <member name="xlicmimepart_component"
              value="25"
              c:identifier="I_CAL_XLICMIMEPART_COMPONENT">
      </member>
    </enumeration>
    <class name="DurationType"
           c:symbol-prefix="duration_type"
           c:type="ICalDurationType"
           parent="Object"
           glib:type-name="ICalDurationType"
           glib:get-type="i_cal_duration_type_get_type"
           glib:type-struct="DurationTypeClass">
      <constructor name="new_full"
                   c:identifier="i_cal_duration_type_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="DurationType" c:type="ICalDurationType*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type name="gpointer" c:type="icaldurationtype"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="bad_duration"
                c:identifier="i_cal_duration_type_bad_duration"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalDurationType  Create a bad #ICalDurationType</doc>
          <type name="DurationType" c:type="ICalDurationType*"/>
        </return-value>
      </function>
      <function name="from_int"
                c:identifier="i_cal_duration_type_from_int"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalDurationType  Create a #ICalDurationType from the duration in second</doc>
          <type name="DurationType" c:type="ICalDurationType*"/>
        </return-value>
        <parameters>
          <parameter name="t" transfer-ownership="none">
            <doc xml:space="preserve">the duration in second</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_string"
                c:identifier="i_cal_duration_type_from_string"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalDurationType  Create a #ICalDurationType from the duration in string</doc>
          <type name="DurationType" c:type="ICalDurationType*"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve">The string representation of the duration</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="null_duration"
                c:identifier="i_cal_duration_type_null_duration"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created #ICalDurationType  Create a #ICalDurationType with all the fields to be zero</doc>
          <type name="DurationType" c:type="ICalDurationType*"/>
        </return-value>
      </function>
      <method name="as_ical_string_r"
              c:identifier="i_cal_duration_type_as_ical_string_r"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The duration in string  Convert the #ICalDurationType to the representation in string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalDurationType to be converted</doc>
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="as_int"
              c:identifier="i_cal_duration_type_as_int"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The duration in second  Convert the #ICalDurationType to the representation in second</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalDurationType to be converted</doc>
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_pointer_set_owner"
              c:identifier="i_cal_duration_type_get_native_pointer_set_owner"
              introspectable="0">
        <return-value>
          <type name="gpointer" c:type="icaldurationtype*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_duration_type_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type name="gpointer" c:type="icaldurationtype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_duration_type_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type name="gpointer" c:type="icaldurationtype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DurationType" c:type="const ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_bad_duration"
              c:identifier="i_cal_duration_type_is_bad_duration"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if @duration is the bad_duration, 0 if not.  Check whether the #ICalDurationType is the bad_duration</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalDurationType to be checked</doc>
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_null_duration"
              c:identifier="i_cal_duration_type_is_null_duration"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">1 if @duration is the null_duration, 0 if not.  Check whether the #ICalDurationType is the null_duration</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalDurationType to be checked</doc>
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_duration_type_steal_native"
              introspectable="0">
        <return-value>
          <type name="gpointer" c:type="icaldurationtype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DurationType" c:type="ICalDurationType*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="DurationTypeClass"
            c:type="ICalDurationTypeClass"
            glib:is-gtype-struct-for="DurationType">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <enumeration name="ErrorEnum" c:type="ICalErrorEnum">
      <member name="no_error" value="0" c:identifier="I_CAL_NO_ERROR">
      </member>
      <member name="badarg_error" value="1" c:identifier="I_CAL_BADARG_ERROR">
      </member>
      <member name="newfailed_error"
              value="2"
              c:identifier="I_CAL_NEWFAILED_ERROR">
      </member>
      <member name="allocation_error"
              value="3"
              c:identifier="I_CAL_ALLOCATION_ERROR">
      </member>
      <member name="malformeddata_error"
              value="4"
              c:identifier="I_CAL_MALFORMEDDATA_ERROR">
      </member>
      <member name="parse_error" value="5" c:identifier="I_CAL_PARSE_ERROR">
      </member>
      <member name="internal_error"
              value="6"
              c:identifier="I_CAL_INTERNAL_ERROR">
      </member>
      <member name="file_error" value="7" c:identifier="I_CAL_FILE_ERROR">
      </member>
      <member name="usage_error" value="8" c:identifier="I_CAL_USAGE_ERROR">
      </member>
      <member name="unimplemented_error"
              value="9"
              c:identifier="I_CAL_UNIMPLEMENTED_ERROR">
      </member>
      <member name="unknown_error"
              value="10"
              c:identifier="I_CAL_UNKNOWN_ERROR">
      </member>
    </enumeration>
    <enumeration name="ErrorState" c:type="ICalErrorState">
      <member name="fatal" value="0" c:identifier="I_CAL_ERROR_FATAL">
      </member>
      <member name="nonfatal" value="1" c:identifier="I_CAL_ERROR_NONFATAL">
      </member>
      <member name="default" value="2" c:identifier="I_CAL_ERROR_DEFAULT">
      </member>
      <member name="unknown" value="3" c:identifier="I_CAL_ERROR_UNKNOWN">
      </member>
    </enumeration>
    <class name="Object"
           c:symbol-prefix="object"
           c:type="ICalObject"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ICalObject"
           glib:get-type="i_cal_object_get_type"
           glib:type-struct="ObjectClass">
      <method name="add_depender"
              c:identifier="i_cal_object_add_depender"
              version="1.0">
        <doc xml:space="preserve">Adds a @depender into the list of objects which should not be destroyed before
this @iobject. It's usually used for cases where the @iobject uses native libical
structure from the @depender. The @depender is referenced. It's illegal to try
to add one @depender multiple times.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
          <parameter name="depender" transfer-ownership="none">
            <doc xml:space="preserve">a #GObject depender</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="construct"
              c:identifier="i_cal_object_construct"
              version="1.0">
        <doc xml:space="preserve">Initialize private members of #iobject at once. The descendants should
call this function in their _new() function, or use corresponding properties
during the construction time. This should not be mixed, either use
properties or this function.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
          <parameter name="native" transfer-ownership="none">
            <doc xml:space="preserve">a native libical structure</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="native_destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve">a function to be called on @native when it should be freed</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="is_global_memory" transfer-ownership="none">
            <doc xml:space="preserve">whether @native is a global shared memory structure</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none" allow-none="1">
            <doc xml:space="preserve">an owner of @native</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_is_global_memory"
              c:identifier="i_cal_object_get_is_global_memory"
              version="1.0">
        <doc xml:space="preserve">Obtains whether the native libical structure is a global shared memory,
thus should not be destroyed. This can be set only during contruction time.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Whether the native libical structure is a global shared memory.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native"
              c:identifier="i_cal_object_get_native"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve">Obtain native libical structure pointer associated with this @iobject.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Native libical structure pointer associated with this @iobject.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_destroy_func"
              c:identifier="i_cal_object_get_native_destroy_func"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve">Obtain a pointer to a function responsible to free the libical native structure.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Pointer to a function responsible to free the libical native structure.</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref_owner"
              c:identifier="i_cal_object_ref_owner"
              version="1.0">
        <doc xml:space="preserve">Obtain current owner of the native libical structure. The returned pointer,
if not #NULL, is referenced for thread safety. Unref it with g_object_unref()
when done with it.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">Current owner of the libical native structure. returns #NULL, when there is no owner.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_depender"
              c:identifier="i_cal_object_remove_depender"
              version="1.0">
        <doc xml:space="preserve">Removes a @depender from the list of objects which should not be destroyed before
this @iobject, previously added with i_cal_object_add_depender(). It's illegal to try
to remove the @depender which is not in the internal list.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
          <parameter name="depender" transfer-ownership="none">
            <doc xml:space="preserve">a #GObject depender</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_owner"
              c:identifier="i_cal_object_remove_owner"
              version="1.0">
        <doc xml:space="preserve">Unref and remove the owner.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_native_destroy_func"
              c:identifier="i_cal_object_set_native_destroy_func"
              version="1.0">
        <doc xml:space="preserve">Sets a function to be used to destroy the native libical structure.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
          <parameter name="native_destroy_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve">Function to be used to destroy the native libical structure</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_owner"
              c:identifier="i_cal_object_set_owner"
              version="1.0">
        <doc xml:space="preserve">Sets an owner of the native libical structure, that is an object responsible
for a destroy of the native libical structure.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <doc xml:space="preserve">Owner of the native libical structure</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_object_steal_native"
              version="1.0">
        <doc xml:space="preserve">Obtain native libical structure pointer associated with this @iobject and sets the one
at @iobject to #NULL, thus it's invalid since now on.</doc>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">Native libical structure pointer associated with this @iobject.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="iobject" transfer-ownership="none">
            <doc xml:space="preserve">an #ICalObject</doc>
            <type name="Object" c:type="ICalObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="is-global-memory"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve">Whether the native libical structure is from a global shared memory.
If #TRUE, then it is not freed on #ICalObject's finalize.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="native"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve">The native libical structure for this ICalObject.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="native-destroy-func"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve">GDestroyNotify function to use to destroy the native libical pointer.</doc>
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="owner" writable="1" transfer-ownership="none">
        <doc xml:space="preserve">Owner of the native libical structure. If set, then it is
responsible for a free of the native libical structure.</doc>
        <type name="GObject.Object"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ObjectPrivate" c:type="ICalObjectPrivate*"/>
      </field>
    </class>
    <record name="ObjectClass"
            c:type="ICalObjectClass"
            glib:is-gtype-struct-for="Object">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ObjectPrivate" c:type="ICalObjectPrivate" disguised="1">
    </record>
    <class name="Property"
           c:symbol-prefix="property"
           c:type="ICalProperty"
           parent="Object"
           glib:type-name="ICalProperty"
           glib:get-type="i_cal_property_get_type"
           glib:type-struct="PropertyClass">
      <constructor name="new_full"
                   c:identifier="i_cal_property_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Property" c:type="ICalProperty*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icalproperty*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_property_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalproperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Property" c:type="ICalProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_property_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icalproperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Property" c:type="const ICalProperty*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_property_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icalproperty*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Property" c:type="ICalProperty*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="PropertyClass"
            c:type="ICalPropertyClass"
            glib:is-gtype-struct-for="Property">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <enumeration name="PropertyKind" c:type="ICalPropertyKind">
      <member name="any_property" value="0" c:identifier="I_CAL_ANY_PROPERTY">
      </member>
      <member name="acknowledged_property"
              value="1"
              c:identifier="I_CAL_ACKNOWLEDGED_PROPERTY">
      </member>
      <member name="action_property"
              value="2"
              c:identifier="I_CAL_ACTION_PROPERTY">
      </member>
      <member name="allowconflict_property"
              value="3"
              c:identifier="I_CAL_ALLOWCONFLICT_PROPERTY">
      </member>
      <member name="attach_property"
              value="4"
              c:identifier="I_CAL_ATTACH_PROPERTY">
      </member>
      <member name="attendee_property"
              value="5"
              c:identifier="I_CAL_ATTENDEE_PROPERTY">
      </member>
      <member name="calid_property"
              value="6"
              c:identifier="I_CAL_CALID_PROPERTY">
      </member>
      <member name="calmaster_property"
              value="7"
              c:identifier="I_CAL_CALMASTER_PROPERTY">
      </member>
      <member name="calscale_property"
              value="8"
              c:identifier="I_CAL_CALSCALE_PROPERTY">
      </member>
      <member name="capversion_property"
              value="9"
              c:identifier="I_CAL_CAPVERSION_PROPERTY">
      </member>
      <member name="carlevel_property"
              value="10"
              c:identifier="I_CAL_CARLEVEL_PROPERTY">
      </member>
      <member name="carid_property"
              value="11"
              c:identifier="I_CAL_CARID_PROPERTY">
      </member>
      <member name="categories_property"
              value="12"
              c:identifier="I_CAL_CATEGORIES_PROPERTY">
      </member>
      <member name="class_property"
              value="13"
              c:identifier="I_CAL_CLASS_PROPERTY">
      </member>
      <member name="cmd_property" value="14" c:identifier="I_CAL_CMD_PROPERTY">
      </member>
      <member name="comment_property"
              value="15"
              c:identifier="I_CAL_COMMENT_PROPERTY">
      </member>
      <member name="completed_property"
              value="16"
              c:identifier="I_CAL_COMPLETED_PROPERTY">
      </member>
      <member name="components_property"
              value="17"
              c:identifier="I_CAL_COMPONENTS_PROPERTY">
      </member>
      <member name="contact_property"
              value="18"
              c:identifier="I_CAL_CONTACT_PROPERTY">
      </member>
      <member name="created_property"
              value="19"
              c:identifier="I_CAL_CREATED_PROPERTY">
      </member>
      <member name="csid_property"
              value="20"
              c:identifier="I_CAL_CSID_PROPERTY">
      </member>
      <member name="datemax_property"
              value="21"
              c:identifier="I_CAL_DATEMAX_PROPERTY">
      </member>
      <member name="datemin_property"
              value="22"
              c:identifier="I_CAL_DATEMIN_PROPERTY">
      </member>
      <member name="decreed_property"
              value="23"
              c:identifier="I_CAL_DECREED_PROPERTY">
      </member>
      <member name="defaultcharset_property"
              value="24"
              c:identifier="I_CAL_DEFAULTCHARSET_PROPERTY">
      </member>
      <member name="defaultlocale_property"
              value="25"
              c:identifier="I_CAL_DEFAULTLOCALE_PROPERTY">
      </member>
      <member name="defaulttzid_property"
              value="26"
              c:identifier="I_CAL_DEFAULTTZID_PROPERTY">
      </member>
      <member name="defaultvcars_property"
              value="27"
              c:identifier="I_CAL_DEFAULTVCARS_PROPERTY">
      </member>
      <member name="deny_property"
              value="28"
              c:identifier="I_CAL_DENY_PROPERTY">
      </member>
      <member name="description_property"
              value="29"
              c:identifier="I_CAL_DESCRIPTION_PROPERTY">
      </member>
      <member name="dtend_property"
              value="30"
              c:identifier="I_CAL_DTEND_PROPERTY">
      </member>
      <member name="dtstamp_property"
              value="31"
              c:identifier="I_CAL_DTSTAMP_PROPERTY">
      </member>
      <member name="dtstart_property"
              value="32"
              c:identifier="I_CAL_DTSTART_PROPERTY">
      </member>
      <member name="due_property" value="33" c:identifier="I_CAL_DUE_PROPERTY">
      </member>
      <member name="duration_property"
              value="34"
              c:identifier="I_CAL_DURATION_PROPERTY">
      </member>
      <member name="exdate_property"
              value="35"
              c:identifier="I_CAL_EXDATE_PROPERTY">
      </member>
      <member name="expand_property"
              value="36"
              c:identifier="I_CAL_EXPAND_PROPERTY">
      </member>
      <member name="exrule_property"
              value="37"
              c:identifier="I_CAL_EXRULE_PROPERTY">
      </member>
      <member name="freebusy_property"
              value="38"
              c:identifier="I_CAL_FREEBUSY_PROPERTY">
      </member>
      <member name="geo_property" value="39" c:identifier="I_CAL_GEO_PROPERTY">
      </member>
      <member name="grant_property"
              value="40"
              c:identifier="I_CAL_GRANT_PROPERTY">
      </member>
      <member name="itipversion_property"
              value="41"
              c:identifier="I_CAL_ITIPVERSION_PROPERTY">
      </member>
      <member name="lastmodified_property"
              value="42"
              c:identifier="I_CAL_LASTMODIFIED_PROPERTY">
      </member>
      <member name="location_property"
              value="43"
              c:identifier="I_CAL_LOCATION_PROPERTY">
      </member>
      <member name="maxcomponentsize_property"
              value="44"
              c:identifier="I_CAL_MAXCOMPONENTSIZE_PROPERTY">
      </member>
      <member name="maxdate_property"
              value="45"
              c:identifier="I_CAL_MAXDATE_PROPERTY">
      </member>
      <member name="maxresults_property"
              value="46"
              c:identifier="I_CAL_MAXRESULTS_PROPERTY">
      </member>
      <member name="maxresultssize_property"
              value="47"
              c:identifier="I_CAL_MAXRESULTSSIZE_PROPERTY">
      </member>
      <member name="method_property"
              value="48"
              c:identifier="I_CAL_METHOD_PROPERTY">
      </member>
      <member name="mindate_property"
              value="49"
              c:identifier="I_CAL_MINDATE_PROPERTY">
      </member>
      <member name="multipart_property"
              value="50"
              c:identifier="I_CAL_MULTIPART_PROPERTY">
      </member>
      <member name="name_property"
              value="51"
              c:identifier="I_CAL_NAME_PROPERTY">
      </member>
      <member name="organizer_property"
              value="52"
              c:identifier="I_CAL_ORGANIZER_PROPERTY">
      </member>
      <member name="owner_property"
              value="53"
              c:identifier="I_CAL_OWNER_PROPERTY">
      </member>
      <member name="percentcomplete_property"
              value="54"
              c:identifier="I_CAL_PERCENTCOMPLETE_PROPERTY">
      </member>
      <member name="permission_property"
              value="55"
              c:identifier="I_CAL_PERMISSION_PROPERTY">
      </member>
      <member name="priority_property"
              value="56"
              c:identifier="I_CAL_PRIORITY_PROPERTY">
      </member>
      <member name="prodid_property"
              value="57"
              c:identifier="I_CAL_PRODID_PROPERTY">
      </member>
      <member name="query_property"
              value="58"
              c:identifier="I_CAL_QUERY_PROPERTY">
      </member>
      <member name="querylevel_property"
              value="59"
              c:identifier="I_CAL_QUERYLEVEL_PROPERTY">
      </member>
      <member name="queryid_property"
              value="60"
              c:identifier="I_CAL_QUERYID_PROPERTY">
      </member>
      <member name="queryname_property"
              value="61"
              c:identifier="I_CAL_QUERYNAME_PROPERTY">
      </member>
      <member name="rdate_property"
              value="62"
              c:identifier="I_CAL_RDATE_PROPERTY">
      </member>
      <member name="recuraccepted_property"
              value="63"
              c:identifier="I_CAL_RECURACCEPTED_PROPERTY">
      </member>
      <member name="recurexpand_property"
              value="64"
              c:identifier="I_CAL_RECUREXPAND_PROPERTY">
      </member>
      <member name="recurlimit_property"
              value="65"
              c:identifier="I_CAL_RECURLIMIT_PROPERTY">
      </member>
      <member name="recurrenceid_property"
              value="66"
              c:identifier="I_CAL_RECURRENCEID_PROPERTY">
      </member>
      <member name="relatedto_property"
              value="67"
              c:identifier="I_CAL_RELATEDTO_PROPERTY">
      </member>
      <member name="relcalid_property"
              value="68"
              c:identifier="I_CAL_RELCALID_PROPERTY">
      </member>
      <member name="repeat_property"
              value="69"
              c:identifier="I_CAL_REPEAT_PROPERTY">
      </member>
      <member name="requeststatus_property"
              value="70"
              c:identifier="I_CAL_REQUESTSTATUS_PROPERTY">
      </member>
      <member name="resources_property"
              value="71"
              c:identifier="I_CAL_RESOURCES_PROPERTY">
      </member>
      <member name="restriction_property"
              value="72"
              c:identifier="I_CAL_RESTRICTION_PROPERTY">
      </member>
      <member name="rrule_property"
              value="73"
              c:identifier="I_CAL_RRULE_PROPERTY">
      </member>
      <member name="scope_property"
              value="74"
              c:identifier="I_CAL_SCOPE_PROPERTY">
      </member>
      <member name="sequence_property"
              value="75"
              c:identifier="I_CAL_SEQUENCE_PROPERTY">
      </member>
      <member name="status_property"
              value="76"
              c:identifier="I_CAL_STATUS_PROPERTY">
      </member>
      <member name="storesexpanded_property"
              value="77"
              c:identifier="I_CAL_STORESEXPANDED_PROPERTY">
      </member>
      <member name="summary_property"
              value="78"
              c:identifier="I_CAL_SUMMARY_PROPERTY">
      </member>
      <member name="target_property"
              value="79"
              c:identifier="I_CAL_TARGET_PROPERTY">
      </member>
      <member name="transp_property"
              value="80"
              c:identifier="I_CAL_TRANSP_PROPERTY">
      </member>
      <member name="trigger_property"
              value="81"
              c:identifier="I_CAL_TRIGGER_PROPERTY">
      </member>
      <member name="tzid_property"
              value="82"
              c:identifier="I_CAL_TZID_PROPERTY">
      </member>
      <member name="tzname_property"
              value="83"
              c:identifier="I_CAL_TZNAME_PROPERTY">
      </member>
      <member name="tzoffsetfrom_property"
              value="84"
              c:identifier="I_CAL_TZOFFSETFROM_PROPERTY">
      </member>
      <member name="tzoffsetto_property"
              value="85"
              c:identifier="I_CAL_TZOFFSETTO_PROPERTY">
      </member>
      <member name="tzurl_property"
              value="86"
              c:identifier="I_CAL_TZURL_PROPERTY">
      </member>
      <member name="uid_property" value="87" c:identifier="I_CAL_UID_PROPERTY">
      </member>
      <member name="url_property" value="88" c:identifier="I_CAL_URL_PROPERTY">
      </member>
      <member name="version_property"
              value="89"
              c:identifier="I_CAL_VERSION_PROPERTY">
      </member>
      <member name="x_property" value="90" c:identifier="I_CAL_X_PROPERTY">
      </member>
      <member name="xlicclass_property"
              value="91"
              c:identifier="I_CAL_XLICCLASS_PROPERTY">
      </member>
      <member name="xlicclustercount_property"
              value="92"
              c:identifier="I_CAL_XLICCLUSTERCOUNT_PROPERTY">
      </member>
      <member name="xlicerror_property"
              value="93"
              c:identifier="I_CAL_XLICERROR_PROPERTY">
      </member>
      <member name="xlicmimecharset_property"
              value="94"
              c:identifier="I_CAL_XLICMIMECHARSET_PROPERTY">
      </member>
      <member name="xlicmimecid_property"
              value="95"
              c:identifier="I_CAL_XLICMIMECID_PROPERTY">
      </member>
      <member name="xlicmimecontenttype_property"
              value="96"
              c:identifier="I_CAL_XLICMIMECONTENTTYPE_PROPERTY">
      </member>
      <member name="xlicmimeencoding_property"
              value="97"
              c:identifier="I_CAL_XLICMIMEENCODING_PROPERTY">
      </member>
      <member name="xlicmimefilename_property"
              value="98"
              c:identifier="I_CAL_XLICMIMEFILENAME_PROPERTY">
      </member>
      <member name="xlicmimeoptinfo_property"
              value="99"
              c:identifier="I_CAL_XLICMIMEOPTINFO_PROPERTY">
      </member>
      <member name="no_property" value="100" c:identifier="I_CAL_NO_PROPERTY">
      </member>
    </enumeration>
    <enumeration name="RequestStatus" c:type="ICalRequestStatus">
      <member name="unknown_status"
              value="0"
              c:identifier="I_CAL_UNKNOWN_STATUS">
      </member>
      <member name="2_0_success_status"
              value="1"
              c:identifier="I_CAL_2_0_SUCCESS_STATUS">
      </member>
      <member name="2_1_fallback_status"
              value="2"
              c:identifier="I_CAL_2_1_FALLBACK_STATUS">
      </member>
      <member name="2_2_igprop_status"
              value="3"
              c:identifier="I_CAL_2_2_IGPROP_STATUS">
      </member>
      <member name="2_3_igparam_status"
              value="4"
              c:identifier="I_CAL_2_3_IGPARAM_STATUS">
      </member>
      <member name="2_4_igxprop_status"
              value="5"
              c:identifier="I_CAL_2_4_IGXPROP_STATUS">
      </member>
      <member name="2_5_igxparam_status"
              value="6"
              c:identifier="I_CAL_2_5_IGXPARAM_STATUS">
      </member>
      <member name="2_6_igcomp_status"
              value="7"
              c:identifier="I_CAL_2_6_IGCOMP_STATUS">
      </member>
      <member name="2_7_forward_status"
              value="8"
              c:identifier="I_CAL_2_7_FORWARD_STATUS">
      </member>
      <member name="2_8_oneevent_status"
              value="9"
              c:identifier="I_CAL_2_8_ONEEVENT_STATUS">
      </member>
      <member name="2_9_trunc_status"
              value="10"
              c:identifier="I_CAL_2_9_TRUNC_STATUS">
      </member>
      <member name="2_10_onetodo_status"
              value="11"
              c:identifier="I_CAL_2_10_ONETODO_STATUS">
      </member>
      <member name="2_11_truncrrule_status"
              value="12"
              c:identifier="I_CAL_2_11_TRUNCRRULE_STATUS">
      </member>
      <member name="3_0_invpropname_status"
              value="13"
              c:identifier="I_CAL_3_0_INVPROPNAME_STATUS">
      </member>
      <member name="3_1_invpropval_status"
              value="14"
              c:identifier="I_CAL_3_1_INVPROPVAL_STATUS">
      </member>
      <member name="3_2_invparam_status"
              value="15"
              c:identifier="I_CAL_3_2_INVPARAM_STATUS">
      </member>
      <member name="3_3_invparamval_status"
              value="16"
              c:identifier="I_CAL_3_3_INVPARAMVAL_STATUS">
      </member>
      <member name="3_4_invcomp_status"
              value="17"
              c:identifier="I_CAL_3_4_INVCOMP_STATUS">
      </member>
      <member name="3_5_invtime_status"
              value="18"
              c:identifier="I_CAL_3_5_INVTIME_STATUS">
      </member>
      <member name="3_6_invrule_status"
              value="19"
              c:identifier="I_CAL_3_6_INVRULE_STATUS">
      </member>
      <member name="3_7_invcu_status"
              value="20"
              c:identifier="I_CAL_3_7_INVCU_STATUS">
      </member>
      <member name="3_8_noauth_status"
              value="21"
              c:identifier="I_CAL_3_8_NOAUTH_STATUS">
      </member>
      <member name="3_9_badversion_status"
              value="22"
              c:identifier="I_CAL_3_9_BADVERSION_STATUS">
      </member>
      <member name="3_10_toobig_status"
              value="23"
              c:identifier="I_CAL_3_10_TOOBIG_STATUS">
      </member>
      <member name="3_11_missreqcomp_status"
              value="24"
              c:identifier="I_CAL_3_11_MISSREQCOMP_STATUS">
      </member>
      <member name="3_12_unkcomp_status"
              value="25"
              c:identifier="I_CAL_3_12_UNKCOMP_STATUS">
      </member>
      <member name="3_13_badcomp_status"
              value="26"
              c:identifier="I_CAL_3_13_BADCOMP_STATUS">
      </member>
      <member name="3_14_nocap_status"
              value="27"
              c:identifier="I_CAL_3_14_NOCAP_STATUS">
      </member>
      <member name="3_15_invcommand"
              value="28"
              c:identifier="I_CAL_3_15_INVCOMMAND">
      </member>
      <member name="4_0_busy_status"
              value="29"
              c:identifier="I_CAL_4_0_BUSY_STATUS">
      </member>
      <member name="4_1_store_access_denied"
              value="30"
              c:identifier="I_CAL_4_1_STORE_ACCESS_DENIED">
      </member>
      <member name="4_2_store_failed"
              value="31"
              c:identifier="I_CAL_4_2_STORE_FAILED">
      </member>
      <member name="4_3_store_not_found"
              value="32"
              c:identifier="I_CAL_4_3_STORE_NOT_FOUND">
      </member>
      <member name="5_0_maybe_status"
              value="33"
              c:identifier="I_CAL_5_0_MAYBE_STATUS">
      </member>
      <member name="5_1_unavail_status"
              value="34"
              c:identifier="I_CAL_5_1_UNAVAIL_STATUS">
      </member>
      <member name="5_2_noservice_status"
              value="35"
              c:identifier="I_CAL_5_2_NOSERVICE_STATUS">
      </member>
      <member name="5_3_nosched_status"
              value="36"
              c:identifier="I_CAL_5_3_NOSCHED_STATUS">
      </member>
      <member name="6_1_container_not_found"
              value="37"
              c:identifier="I_CAL_6_1_CONTAINER_NOT_FOUND">
      </member>
      <member name="9_0_unrecognized_command"
              value="38"
              c:identifier="I_CAL_9_0_UNRECOGNIZED_COMMAND">
      </member>
    </enumeration>
    <class name="Timetype"
           c:symbol-prefix="timetype"
           c:type="ICalTimetype"
           parent="Object"
           glib:type-name="ICalTimetype"
           glib:get-type="i_cal_timetype_get_type"
           glib:type-struct="TimetypeClass">
      <constructor name="new_full"
                   c:identifier="i_cal_timetype_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Timetype" c:type="ICalTimetype*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icaltimetype"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new"
                c:identifier="i_cal_timetype_new"
                version="1.0"
                introspectable="0">
        <return-value>
          <doc xml:space="preserve">The newly created #ICalTimetype. It is the epoch time (19700-1-1 00:00:00 utc)  Create a new #ICalTimetype.</doc>
          <type c:type="icaltimetype"/>
        </return-value>
      </function>
      <method name="get_day"
              c:identifier="i_cal_timetype_get_day"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The day.  Get the day of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hour"
              c:identifier="i_cal_timetype_get_hour"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The hour.  Get the hour of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minute"
              c:identifier="i_cal_timetype_get_minute"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The minute.  Get the minute of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_month"
              c:identifier="i_cal_timetype_get_month"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The month.  Get the month of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_pointer_set_owner"
              c:identifier="i_cal_timetype_get_native_pointer_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icaltimetype*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_timetype_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icaltimetype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_timetype_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icaltimetype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timetype" c:type="const ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_second"
              c:identifier="i_cal_timetype_get_second"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The second.  Get the second of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_year"
              c:identifier="i_cal_timetype_get_year"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The year.  Get the year of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_zone"
              c:identifier="i_cal_timetype_get_zone"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The timezone.  Get the is_daylight of #ICalTimetype.</doc>
          <type name="Timezone" c:type="const ICalTimezone*"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_date"
              c:identifier="i_cal_timetype_is_date"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The is_date.  Get the is_date of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_daylight"
              c:identifier="i_cal_timetype_is_daylight"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The is_daylight.  Get the is_daylight of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_utc" c:identifier="i_cal_timetype_is_utc" version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The is_utc.  Get the is_utc of #ICalTimetype.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timetype" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimetype to be queried.</doc>
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_timetype_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icaltimetype"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timetype" c:type="ICalTimetype*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="TimetypeClass"
            c:type="ICalTimetypeClass"
            glib:is-gtype-struct-for="Timetype">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <class name="Timezone"
           c:symbol-prefix="timezone"
           c:type="ICalTimezone"
           parent="Object"
           glib:type-name="ICalTimezone"
           glib:get-type="i_cal_timezone_get_type"
           glib:type-struct="TimezoneClass">
      <constructor name="new" c:identifier="i_cal_timezone_new" version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The newly created object of the type #ICalTimezone.  The constructor of the type #ICalTimezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
      </constructor>
      <constructor name="new_full"
                   c:identifier="i_cal_timezone_new_full"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type c:type="icaltimezone*"/>
          </parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="is_global_memory" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="destroy"
                c:identifier="i_cal_timezone_destroy"
                version="1.0"
                introspectable="0">
        <doc xml:space="preserve">The destructor of the type #ICalTimezone</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be freed</doc>
            <type c:type="icaltimezone*"/>
          </parameter>
        </parameters>
      </function>
      <function name="free_builtin_timezones"
                c:identifier="i_cal_timezone_free_builtin_timezones"
                version="1.0">
        <doc xml:space="preserve">Free any builtin timezone information</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="get_builtin_timezone"
                c:identifier="i_cal_timezone_get_builtin_timezone"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The builtin #ICalTimezone with the name of @location  Returns a single builtin timezone, given its Olson city name.</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
        <parameters>
          <parameter name="location" transfer-ownership="none">
            <doc xml:space="preserve">The location representing the timezone.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_builtin_timezone_from_offset"
                c:identifier="i_cal_timezone_get_builtin_timezone_from_offset"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">Returns a single builtin timezone, given its offset.</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve">The offset used to get the #ICalTimezone</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="tzname" transfer-ownership="none">
            <doc xml:space="preserve">The reference #ICalTimezone name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_builtin_timezone_from_tzid"
                c:identifier="i_cal_timezone_get_builtin_timezone_from_tzid"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">Returns a single builtin timezone, given its TZID.</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
        <parameters>
          <parameter name="tzid" transfer-ownership="none">
            <doc xml:space="preserve">The tzid name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_utc_timezone"
                c:identifier="i_cal_timezone_get_utc_timezone"
                version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">The utc #ICalTimezone  Returns the UTC timezone.</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
      </function>
      <function name="release_zone_tab"
                c:identifier="i_cal_timezone_release_zone_tab"
                version="1.0">
        <doc xml:space="preserve">Free memory dedicated to the zonefile directory</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="set_tzid_prefix"
                c:identifier="i_cal_timezone_set_tzid_prefix"
                version="1.0">
        <doc xml:space="preserve">Sets the prefix to be used for tzid's generated from system tzdata. Must be globally unique (such as
a domain name owned by the developer of the calling application), and begin and end with forward slashes.
Do not change or de-allocate the string buffer after calling this.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="new_prefix" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="copy" c:identifier="i_cal_timezone_copy" version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The newly created #ICalTimezone with the same values as @zone  The clone method for #ICalTimezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone needs to be cloned.</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="i_cal_timezone_free" version="1.0">
        <doc xml:space="preserve">The destructor of #ICalTimezone</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be freed</doc>
            <type name="Timezone" c:type="ICalTimezone*"/>
          </instance-parameter>
          <parameter name="free_struct" transfer-ownership="none">
            <doc xml:space="preserve">Whether to free it or reset it. 1 to free and 0 to reset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_component"
              c:identifier="i_cal_timezone_get_component"
              version="1.0">
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">the VTIMEZONE component of the @zone.  Returns the VTIMEZONE component of a timezone.</doc>
          <type name="Component" c:type="ICalComponent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_display_name"
              c:identifier="i_cal_timezone_get_display_name"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The display name of @zone  Get the display name of the @zone.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_latitude"
              c:identifier="i_cal_timezone_get_latitude"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The latitude of the #ICalTimezone  Returns the latitude of a builtin timezone.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_location"
              c:identifier="i_cal_timezone_get_location"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The location of the #ICalTimezone  Returns the city name of a timezone.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_longitude"
              c:identifier="i_cal_timezone_get_longitude"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The longitude of the #ICalTimezone.  Returns the longitude of a builtin timezone.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_remove_owner"
              c:identifier="i_cal_timezone_get_native_remove_owner"
              introspectable="0">
        <return-value>
          <type c:type="icaltimezone*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timezone" c:type="ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_native_set_owner"
              c:identifier="i_cal_timezone_get_native_set_owner"
              introspectable="0">
        <return-value>
          <type c:type="icaltimezone*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
          <parameter name="owner" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tzid"
              c:identifier="i_cal_timezone_get_tzid"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The timezone id  Returns the TZID of a timezone.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tznames"
              c:identifier="i_cal_timezone_get_tznames"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">The timezone name  Returns the TZNAME properties used in the latest STANDARD and DAYLIGHT components. If they are the same it will return just one, e.g. "LMT". If they are different it will format them like "EST/EDT". Note that this may also return NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be queried</doc>
            <type name="Timezone" c:type="const ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_component"
              c:identifier="i_cal_timezone_set_component"
              version="1.0">
        <return-value transfer-ownership="none">
          <doc xml:space="preserve">Whether the action is successful. 1 for success, 0 for failure.  Sets the VTIMEZONE component of #ICalTimezone, initializing the tzid, location and tzname fields. It returns 1 on success or 0 on failure, i.e. no TZID was found.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="zone" transfer-ownership="none">
            <doc xml:space="preserve">The #ICalTimezone to be set</doc>
            <type name="Timezone" c:type="ICalTimezone*"/>
          </instance-parameter>
          <parameter name="comp" transfer-ownership="none">
            <doc xml:space="preserve">The VTIMEZONE component of an #ICalTimezone, initializing the tzid, location and tzname fields.</doc>
            <type name="Component" c:type="ICalComponent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_native"
              c:identifier="i_cal_timezone_steal_native"
              introspectable="0">
        <return-value>
          <type c:type="icaltimezone*"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="Timezone" c:type="ICalTimezone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="Object" c:type="ICalObject"/>
      </field>
    </class>
    <record name="TimezoneClass"
            c:type="ICalTimezoneClass"
            glib:is-gtype-struct-for="Timezone">
      <field name="parent">
        <type name="ObjectClass" c:type="ICalObjectClass"/>
      </field>
    </record>
    <function name="enum_num_to_reqstat"
              c:identifier="i_cal_enum_num_to_reqstat"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The corresponding #ICalRequestStatus  Return a request status for major/minor status numbers</doc>
        <type name="RequestStatus" c:type="ICalRequestStatus"/>
      </return-value>
      <parameters>
        <parameter name="major" transfer-ownership="none">
          <doc xml:space="preserve">The major number</doc>
          <type name="gshort" c:type="gshort"/>
        </parameter>
        <parameter name="minor" transfer-ownership="none">
          <doc xml:space="preserve">The minor number</doc>
          <type name="gshort" c:type="gshort"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_reqstat_code_r"
              c:identifier="i_cal_enum_reqstat_code_r"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The code for a request status  eturn the code for a request status</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="stat" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalRequestStatus to be queried</doc>
          <type name="RequestStatus" c:type="ICalRequestStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_reqstat_desc"
              c:identifier="i_cal_enum_reqstat_desc"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The description of the @stat  Return the descriptive text for a request status</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="stat" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalRequestStatus to be translated</doc>
          <type name="RequestStatus" c:type="ICalRequestStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_reqstat_major"
              c:identifier="i_cal_enum_reqstat_major"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The major number for a request status  Return the major number for a request status</doc>
        <type name="gshort" c:type="gshort"/>
      </return-value>
      <parameters>
        <parameter name="stat" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalRequestStatus to be queried</doc>
          <type name="RequestStatus" c:type="ICalRequestStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_reqstat_minor"
              c:identifier="i_cal_enum_reqstat_minor"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The minor number for a request status  Return the minor number for a request status</doc>
        <type name="gshort" c:type="gshort"/>
      </return-value>
      <parameters>
        <parameter name="stat" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalRequestStatus to be queried</doc>
          <type name="RequestStatus" c:type="ICalRequestStatus"/>
        </parameter>
      </parameters>
    </function>
    <function name="errno_return"
              c:identifier="i_cal_errno_return"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">Return the error happened  Return the error stored in the library. If no error, return ICAL_NO_ERROR.</doc>
        <type name="ErrorEnum" c:type="ICalErrorEnum"/>
      </return-value>
    </function>
    <function name="error_clear_errno"
              c:identifier="i_cal_error_clear_errno"
              version="1.0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="error_crash_here"
              c:identifier="i_cal_error_crash_here"
              version="1.0">
      <doc xml:space="preserve">Shout out the errors to the compiler</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="error_get_error_state"
              c:identifier="i_cal_error_get_error_state"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The state of the @error  Get the state of an error</doc>
        <type name="ErrorState" c:type="ICalErrorState"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve">The error to be checked</doc>
          <type name="ErrorEnum" c:type="ICalErrorEnum"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_perror"
              c:identifier="i_cal_error_perror"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The string representation of the current error  Get the #ICalErrorEnum in the string representation. This method called the icalerrorno_return to get the current error</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
    </function>
    <function name="error_restore"
              c:identifier="i_cal_error_restore"
              version="1.0">
      <doc xml:space="preserve">Restore the error to specified state</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve">The error to be restored</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="es" transfer-ownership="none">
          <doc xml:space="preserve">The error state to be restored</doc>
          <type name="ErrorState" c:type="ICalErrorState"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_set_error_state"
              c:identifier="i_cal_error_set_error_state"
              version="1.0">
      <doc xml:space="preserve">Set the state to the corresponding error in the library.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve">The error enum</doc>
          <type name="ErrorEnum" c:type="ICalErrorEnum"/>
        </parameter>
        <parameter name="state" transfer-ownership="none">
          <doc xml:space="preserve">The error state</doc>
          <type name="ErrorState" c:type="ICalErrorState"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_stop_here"
              c:identifier="i_cal_error_stop_here"
              version="1.0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="error_strerror"
              c:identifier="i_cal_error_strerror"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The string representation of @e  Translate the #ICalErrorEnum to the string representation</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="e" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalErrorEnum to be translated</doc>
          <type name="ErrorEnum" c:type="ICalErrorEnum"/>
        </parameter>
      </parameters>
    </function>
    <function name="error_supress"
              c:identifier="i_cal_error_supress"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The error state suppressed  Suppress the error</doc>
        <type name="ErrorState" c:type="ICalErrorState"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <doc xml:space="preserve">The error to be suppressed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_adjust"
              c:identifier="i_cal_time_adjust"
              version="1.0">
      <doc xml:space="preserve">like icaltime_compare_tz, but only use the date parts.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be set</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="days" transfer-ownership="none">
          <doc xml:space="preserve">difference of days adjusted</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
        <parameter name="hours" transfer-ownership="none">
          <doc xml:space="preserve">difference of hours adjusted</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
        <parameter name="minutes" transfer-ownership="none">
          <doc xml:space="preserve">difference of minutes adjusted</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
        <parameter name="seconds" transfer-ownership="none">
          <doc xml:space="preserve">difference of seconds adjusted</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_as_ical_string_r"
              c:identifier="i_cal_time_as_ical_string_r"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The string representation  Return a string represention of the time, in RFC2445 format.</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be converted</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_as_timet"
              c:identifier="i_cal_time_as_timet"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the time as seconds past the UNIX epoch  Return the time as seconds past the UNIX epoch</doc>
        <type name="glong" c:type="time_t"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be converted</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_as_timet_with_zone"
              c:identifier="i_cal_time_as_timet_with_zone"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the time as seconds past the UNIX epoch  Return the time as seconds past the UNIX epoch, using timezones.</doc>
        <type name="glong" c:type="time_t"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be converted</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="zone" transfer-ownership="none">
          <doc xml:space="preserve">The timezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_compare"
              c:identifier="i_cal_time_compare"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">-1, 0, or 1 to indicate that a less than b, a==b or a larger than b.  Return -1, 0, or 1 to indicate that a less than b, a==b or a larger than b.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_compare_date_only"
              c:identifier="i_cal_time_compare_date_only"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">-1, 0, or 1 to indicate that a less than b, a==b or a larger than b.  like icaltime_compare, but only use the date parts.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_compare_date_only_tz"
              c:identifier="i_cal_time_compare_date_only_tz"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">-1, 0, or 1 to indicate that a less than b, a==b or a larger than b.  like icaltime_compare_tz, but only use the date parts.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be compared</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="zone" transfer-ownership="full">
          <doc xml:space="preserve">The target timezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_convert_to_zone"
              c:identifier="i_cal_time_convert_to_zone"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The converted #ICalTimetype  Convert tt, of timezone tzid, into a utc time. Does nothing if the time is already UTC.</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="t" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be normalized</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="zone" transfer-ownership="full">
          <doc xml:space="preserve">The target timezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_current_time_with_zone"
              c:identifier="i_cal_time_current_time_with_zone"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Create a #ICalTimetype according to the timezone and current time</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="zone" transfer-ownership="none">
          <doc xml:space="preserve">The timezone used to create a #ICalTimetype according to the current time</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_day_of_week"
              c:identifier="i_cal_time_day_of_week"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the day of the week of the given time. Sunday is 1.  Return the day of the week of the given time. Sunday is 1</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_day_of_year"
              c:identifier="i_cal_time_day_of_year"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the day of the year of the given time  Return the day of the year of the given time</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_days_in_month"
              c:identifier="i_cal_time_days_in_month"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The number of days in the target month in the target year.  Get the number of days in the target month in the target year.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="month" transfer-ownership="none">
          <doc xml:space="preserve">The target month</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
        <parameter name="year" transfer-ownership="none">
          <doc xml:space="preserve">The target year</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_from_day_of_year"
              c:identifier="i_cal_time_from_day_of_year"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Create a new time, given a day of year and a year.</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="day" transfer-ownership="none">
          <doc xml:space="preserve">The day of a year</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
        <parameter name="year" transfer-ownership="none">
          <doc xml:space="preserve">The year</doc>
          <type name="gint" c:type="const gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_from_string"
              c:identifier="i_cal_time_from_string"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  create a time from an ISO format string</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve">The ISO format string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_from_timet"
              c:identifier="i_cal_time_from_timet"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Convert seconds past UNIX epoch to a timetype</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="v" transfer-ownership="none">
          <doc xml:space="preserve">The seconds past since epoch time</doc>
          <type name="glong" c:type="const time_t"/>
        </parameter>
        <parameter name="is_date" transfer-ownership="none">
          <doc xml:space="preserve">Whether it is a date type, 1 if yes, 0 if not.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_from_timet_with_zone"
              c:identifier="i_cal_time_from_timet_with_zone"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Convert seconds past UNIX epoch to a timetype, using timezones.</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="v" transfer-ownership="none">
          <doc xml:space="preserve">The seconds past since epoch time</doc>
          <type name="glong" c:type="const time_t"/>
        </parameter>
        <parameter name="is_date" transfer-ownership="none">
          <doc xml:space="preserve">Whether it is a date type, 1 if yes, 0 if not.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="zone" transfer-ownership="none">
          <doc xml:space="preserve">The timezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_get_timezone"
              c:identifier="i_cal_time_get_timezone"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The timezone information  Return the timezone</doc>
        <type name="Timezone" c:type="const ICalTimezone*"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_get_tzid"
              c:identifier="i_cal_time_get_tzid"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">The tzid of #ICalTimetype, or NULL if floating type  Return the tzid, or NULL for a floating time</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_is_date"
              c:identifier="i_cal_time_is_date"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">true if time is of DATE type, false if DATE-TIME.  Returns true if time is of DATE type, false if DATE-TIME.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be checked</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_is_null_time"
              c:identifier="i_cal_time_is_null_time"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Whether @tt is null_time. 1 if yes, 0 if not.  Return true of the time is null.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be checked</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_is_utc"
              c:identifier="i_cal_time_is_utc"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">true if time is relative to UTC zone.  Returns true if time is relative to UTC zone.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be checked</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_is_valid_time"
              c:identifier="i_cal_time_is_valid_time"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">Whether @tt is null_time. 1 if yes, 0 if not.  Return true of the time is null.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be checked</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_normalize"
              c:identifier="i_cal_time_normalize"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The #ICalTimetype normalized  Normalize the icaltime, so that all fields are within the normal range.</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="t" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be normalized</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_null_date"
              c:identifier="i_cal_time_null_date"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Create a null date, which indicates no time has been set</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
    </function>
    <function name="time_null_time"
              c:identifier="i_cal_time_null_time"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Create a default time which is an epoch time</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
    </function>
    <function name="time_set_timezone"
              c:identifier="i_cal_time_set_timezone"
              version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The #ICalTimetype after being set  Set the timezone</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="zone" transfer-ownership="full">
          <doc xml:space="preserve">The timezone</doc>
          <type name="Timezone" c:type="ICalTimezone*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_start_doy_of_week"
              c:identifier="i_cal_time_start_doy_of_week"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the day of the year for the Sunday of the week that the given time is within.  Return the day of the year for the Sunday of the week that the given time is within.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_start_doy_week"
              c:identifier="i_cal_time_start_doy_week"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the day of the year for the Sunday of the week that the given time is within.  Return the day of the year for the first day of the week that the given time is within.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
        <parameter name="fdow" transfer-ownership="none">
          <doc xml:space="preserve">The first day of the week</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_today" c:identifier="i_cal_time_today" version="1.0">
      <return-value transfer-ownership="full">
        <doc xml:space="preserve">The newly created #ICalTimetype  Create a #ICalTimetype representing today</doc>
        <type name="Timetype" c:type="ICalTimetype*"/>
      </return-value>
    </function>
    <function name="time_week_number"
              c:identifier="i_cal_time_week_number"
              version="1.0">
      <return-value transfer-ownership="none">
        <doc xml:space="preserve">the week number for the week the given time is within.  Return the week number for the week the given time is within.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="tt" transfer-ownership="none">
          <doc xml:space="preserve">The #ICalTimetype to be queried</doc>
          <type name="Timetype" c:type="ICalTimetype*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
